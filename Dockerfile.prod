# Multi-stage production build
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requerments.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requerments.txt

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r pytunnel && useradd -r -g pytunnel pytunnel

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=pytunnel:pytunnel . .

# Create necessary directories
RUN mkdir -p certs logs config && \
    chown -R pytunnel:pytunnel /app

# Switch to non-root user
USER pytunnel

# Expose ports
EXPOSE 8765 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f -k https://localhost:8081/health || exit 1

# Production command
CMD ["python", "pytunnel.py", "server", "--production"]
